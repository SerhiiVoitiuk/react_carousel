{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","_useState","useState","_useState2","_slicedToArray","visibleItems","setVisibleItems","maxItems","length","frameWith","_jsxs","className","children","_jsx","style","width","concat","map","image","transform","transition","src","alt","type","onClick","Math","min","disabled","max","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","setStep","event","setState","target","value","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","checked","_createClass","key","_this$state","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a926df2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [visibleItems, setVisibleItems] = useState(0);\n\n  const maxItems = (images.length - frameSize) * itemWidth;\n\n  const handlePrevButton = () => {\n    setVisibleItems(Math.min(visibleItems + itemWidth * step, 0));\n\n    if (visibleItems === 0) {\n      setVisibleItems(maxItems);\n    }\n  };\n\n  const handleNextButton = () => {\n    setVisibleItems(Math.max(visibleItems - itemWidth * step, -maxItems));\n\n    if (visibleItems === -maxItems && infinite) {\n      setVisibleItems(0);\n    }\n  };\n\n  const frameWith = frameSize * itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${frameWith}px` }}\n      >\n        {images.map((image) => (\n          <li\n            key={image}\n            style={{\n              transform: `translateX(${visibleItems}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${image}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"button-container\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handlePrevButton}\n          disabled={!visibleItems}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"button\"\n          onClick={handleNextButton}\n          disabled={visibleItems === -maxItems && !infinite}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={this.state.frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div>\n          <label htmlFor=\"itemId\">\n            Item Width:\n          </label>\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.setItemWidth}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"frameId\">\n            Frame Size:\n          </label>\n          <input\n            type=\"number\"\n            value={frameSize}\n            id=\"frameId\"\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setFrameSize}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"stepId\">\n            Step:\n          </label>\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setStep}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"animationId\">\n            Animation Duration:\n          </label>\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.setAnimationDuration}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"infiniteId\">\n            Infinite:\n          </label>\n          <input\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            onChange={this.setInfinite}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}